{"version":3,"sources":["app.js","component.js","environment.js","main.js","resources/index.js"],"names":["App","SCOPES","CLIENT_ID","DISCOVERY_DOCS","loginService","LoginService","driveService","DriveService","files","firstLoad","attached","gapi","load","login","initClient","loggedIn","signIn","id","file","get","console","log","save","content","name","signOut","getFiles","listFiles","err","Component","debug","testing","configure","Promise","config","warnings","wForgottenReturn","aurelia","use","standardConfiguration","feature","developmentLogging","plugin","start","then","setRoot"],"mappings":";;;;;;;;;;;;;MAAaA,cAAAA;AACX,mBAAc;AAAA;;AACZ,UAAIC,SAAS,uCAAb;AACA,UAAIC,YAAY,0EAAhB;AACA,UAAIC,iBAAiB,CAAC,4DAAD,CAArB;;AAEA,WAAKC,YAAL,GAAoB,IAAIC,YAAJ,CAAiBH,SAAjB,EAA4BD,MAA5B,EAAoCE,cAApC,CAApB;AACA,WAAKG,YAAL,GAAoB,IAAIC,YAAJ,EAApB;AACA,WAAKC,KAAL,GAAa,EAAb;;AAOA,UAAIC,YAAY,IAAhB;AACD;;kBAEDC,+BAAW;AAAA;;AACTC,WAAKC,IAAL,CAAU,cAAV,EAA0B,YAAM;AAAE,cAAKC,KAAL;AAAe,OAAjD;AACD;;kBAEDA,yBAAQ;AAAA;;AACN,WAAKT,YAAL,CAAkBU,UAAlB,CAA6B,oBAAY;AACvC,YAAI,CAACC,QAAD,IAAa,OAAKN,SAAtB,EAAiC;AAC/B,iBAAKL,YAAL,CAAkBY,MAAlB;AACA,iBAAKP,SAAL,GAAiB,KAAjB;AACD;AACF,OALD;AAMD;;kBAEDG,uBAAO;AACL,UAAIK,KAAK,8BAAT;AACA,UAAIC,OAAO,EAAED,IAAIA,EAAN,EAAX;AACA,WAAKX,YAAL,CAAkBa,GAAlB,CAAsBD,IAAtB,EAA4B,gBAAQ;AAClCE,gBAAQC,GAAR,CAAYH,IAAZ;AACD,OAFD;AAGD;;kBAEDI,uBAAO;AACL,UAAIJ,OAAO;AACTK,iBAAS,cADA;AAETC,cAAM;AAFG,OAAX;;AAKA,WAAKlB,YAAL,CAAkBgB,IAAlB,CAAuBJ,IAAvB,EAA6B,gBAAQ;AACnCE,gBAAQC,GAAR,CAAY,eAAeH,KAAKD,EAAhC;AACD,OAFD;AAGD;;kBAEDQ,6BAAU;AACR,WAAKrB,YAAL,CAAkBqB,OAAlB;AACD;;kBAEDC,+BAAW;AAAA;;AACT,WAAKpB,YAAL,CAAkBqB,SAAlB,CAA4B,GAA5B,EAAiC,UAACC,GAAD,EAAMpB,KAAN,EAAgB;AAC/CY,gBAAQC,GAAR,CAAYO,GAAZ,EAAiBpB,KAAjB;AACA,eAAKA,KAAL,GAAaA,KAAb;AACD,OAHD;AAID;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QC1DUqB,oBAAAA;;;;;;;;;;;;;;;oBCDE;AACbC,WAAO,IADM;AAEbC,aAAS;AAFI;;;;;;;;UCUCC,YAAAA;;;;;;;;;;AANhBC,UAAQC,MAAR,CAAe;AACbC,cAAU;AACRC,wBAAkB;AADV;AADG,GAAf;;AAMO,WAASJ,SAAT,CAAmBK,OAAnB,EAA4B;AACjCA,YAAQC,GAAR,CACGC,qBADH,GAEGC,OAFH,CAEW,WAFX;;AAIA,QAAI,sBAAYV,KAAhB,EAAuB;AACrBO,cAAQC,GAAR,CAAYG,kBAAZ;AACD;;AAED,QAAI,sBAAYV,OAAhB,EAAyB;AACvBM,cAAQC,GAAR,CAAYI,MAAZ,CAAmB,iBAAnB;AACD;;AAEDL,YAAQM,KAAR,GAAgBC,IAAhB,CAAqB;AAAA,aAAMP,QAAQQ,OAAR,EAAN;AAAA,KAArB;AACD;;;;;;;;UCxBeb,YAAAA;AAAT,WAASA,SAAT,CAAmBE,MAAnB,EAA2B,CAEjC","file":"app-bundle.js","sourcesContent":["export class App {\r\n  constructor() {\r\n    var SCOPES = 'https://www.googleapis.com/auth/drive'\r\n    var CLIENT_ID = '670438381526-24npq8td5gc18p48mrg1bdqnhqikra7m.apps.googleusercontent.com';\r\n    var DISCOVERY_DOCS = ['https://www.googleapis.com/discovery/v1/apis/drive/v3/rest'];\r\n\r\n    this.loginService = new LoginService(CLIENT_ID, SCOPES, DISCOVERY_DOCS);\r\n    this.driveService = new DriveService();\r\n    this.files = [];\r\n    // this.currentFile = {\r\n    //   content: '',\r\n    //   id: null,\r\n    //   name: 'gDriveSync.example.txt',\r\n    //   parents: []\r\n    // };\r\n    var firstLoad = true;\r\n  }\r\n\r\n  attached() {\r\n    gapi.load('client:auth2', () => { this.login(); });\r\n  }\r\n\r\n  login() {\r\n    this.loginService.initClient(loggedIn => {\r\n      if (!loggedIn && this.firstLoad) {\r\n        this.loginService.signIn();\r\n        this.firstLoad = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  load() {\r\n    var id = \"0B4zMwTR7Nf6SdVRHQWVNUXhpY00\";\r\n    var file = { id: id };\r\n    this.driveService.get(file, file => {\r\n      console.log(file);\r\n    });\r\n  }\r\n\r\n  save() {\r\n    var file = {\r\n      content: \"Hello world!\",\r\n      name: \"Example\",\r\n    };\r\n\r\n    this.driveService.save(file, file => {\r\n      console.log('saved file' + file.id);\r\n    });\r\n  }\r\n\r\n  signOut() {\r\n    this.loginService.signOut();\r\n  }\r\n\r\n  getFiles() {\r\n    this.driveService.listFiles(\"*\", (err, files) => {\r\n      console.log(err, files);\r\n      this.files = files;\r\n    });\r\n  }\r\n}\r\n","import { bindable, inject } from 'aurelia-framework';\r\nexport class Component{\r\n    @bindable name;\r\n}","export default {\r\n  debug: true,\r\n  testing: true\r\n};\r\n","import environment from './environment';\r\n\r\n//Configure Bluebird Promises.\r\n//Note: You may want to use environment-specific configuration.\r\nPromise.config({\r\n  warnings: {\r\n    wForgottenReturn: false\r\n  }\r\n});\r\n\r\nexport function configure(aurelia) {\r\n  aurelia.use\r\n    .standardConfiguration()\r\n    .feature('resources');\r\n\r\n  if (environment.debug) {\r\n    aurelia.use.developmentLogging();\r\n  }\r\n\r\n  if (environment.testing) {\r\n    aurelia.use.plugin('aurelia-testing');\r\n  }\r\n\r\n  aurelia.start().then(() => aurelia.setRoot());\r\n}\r\n","export function configure(config) {\r\n  //config.globalResources([]);\r\n}\r\n"],"sourceRoot":".."}